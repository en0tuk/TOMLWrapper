plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id "com.github.spotbugs" version "6.0.7"
    id("maven-publish")
}

spotbugs {
    toolVersion = '4.8.3'
}

group 'ru.enis'
version '1.0.0'

repositories {
    mavenCentral()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/en0tuk/TOMLWrapper")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        shadow(MavenPublication) {publication ->
            project.shadow.component(publication)
            artifactId rootProject.name.toLowerCase()
        }
    }
}
dependencies {
    implementation 'com.electronwill.night-config:toml:3.6.6'

    compileOnly 'org.jetbrains:annotations:24.1.0'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

shadowJar {
    relocate 'com.electronwill', 'third.electronwill'
    minimize()

    archiveFileName = "${rootProject.name}-${getVersion()}.jar"
}

java {
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}